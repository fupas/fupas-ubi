#!/bin/bash

function rake_assets_precompile() {
  [[ "$DISABLE_ASSET_COMPILATION" == "true" ]] && return
  
  echo "---> Starting asset compilation ..."
  bundle exec rake assets:precompile
}

set -e

export RACK_ENV=${RACK_ENV:-"production"}

if [ -n "$RUBYGEM_MIRROR" ]; then
  bundle config mirror.https://rubygems.org $RUBYGEM_MIRROR
fi

shopt -s dotglob
echo "---> Installing application source ..."
cp -Rf /tmp/src/* ./

echo "---> Adding database.yaml ..."
if grep -q pg Gemfile; then
  echo "---> Using Postgresql database.yaml template ..."
  cp -f /opt/app-root/database.pg.yml ./config/database.yml
else
  echo "---> Using MySQL database.yaml template ..."
  cp -f /opt/app-root/database.mysql.yml ./config/database.yml
fi

echo "---> Building your Ruby application from source ..."
if [ -f Gemfile ]; then
  ADDTL_BUNDLE_ARGS="--retry 2"
  
  if [ -f Gemfile.lock ]; then
    if [[ "$BUNDLE_WITHOUT_DEPLOYMENT" == "true" ]]; then
      echo "---> Building without '--deployment' option ..."
    else
      ADDTL_BUNDLE_ARGS+=" --deployment"
    fi
  fi
  
  if [[ "$RAILS_ENV" == "development" || "$RACK_ENV" == "development" ]]; then
    BUNDLE_WITHOUT=${BUNDLE_WITHOUT:-"test"}
  elif [[ "$RAILS_ENV" == "test" || "$RACK_ENV" == "test" ]]; then
    BUNDLE_WITHOUT=${BUNDLE_WITHOUT:-"development"}
  else
    BUNDLE_WITHOUT=${BUNDLE_WITHOUT:-"development:test"}
  fi
  
  if [ -n "$BUNDLE_WITHOUT" ]; then
    ADDTL_BUNDLE_ARGS+=" --without $BUNDLE_WITHOUT"
  fi
  
  if [ -n "$EXTRA_GEMS" ]; then
    echo "---> Injecting extra gems '${EXTRA_GEMS}' ..."
    IFS=', ' read -r -a array <<< "$EXTRA_GEMS"
    for element in "${array[@]}"
    do
      echo "gem '$element'" >> Gemfile
    done
  fi

  echo "---> Running 'bundle install ${ADDTL_BUNDLE_ARGS}' ..."
  bundle install --path ./bundle ${ADDTL_BUNDLE_ARGS}

  echo "---> Cleaning up unused ruby gems ..."
  bundle clean -V
fi

if ! bundle exec rackup -h &>/dev/null; then
  echo "WARNING: Rubygem Rack is not installed in the present image."
  echo "         Add rack to your Gemfile in order to start the web server."
fi

WEBPACKER=${WEBPACKER:-"none"}
if [ "$WEBPACKER" == "none" ]; then
  echo "---> Skipping webpacker ..."
else
  echo "---> Installing webpacker ..."
  bundle exec rake webpacker:install:$WEBPACKER
fi

if [[ "$RAILS_ENV" == "production" || "$RACK_ENV" == "production" ]]; then
  rake_assets_precompile
fi

# Fix source directory permissions
fix-permissions ./

# Make the ./tmp folder world writeable as Rails or other frameworks might use
# it to store temporary data (uploads/cache/sessions/etcd).
# The ./db folder has to be writeable as well because when Rails complete the
# migration it writes the schema version into ./db/schema.db
set +e
[[ -d ./tmp ]] && chgrp -R 0 ./tmp && chmod -R g+rw ./tmp
[[ -d ./db ]] && chgrp -R 0 ./db && chmod -R g+rw ./db
set -e
